{"version":3,"sources":["webpack://AElfCrossChain/webpack/bootstrap","webpack://AElfCrossChain/./node_modules/@babel/runtime/regenerator/index.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/createClass.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://AElfCrossChain/./node_modules/regenerator-runtime/runtime.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://AElfCrossChain/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://AElfCrossChain/./src/crossChain/utils.js","webpack://AElfCrossChain/./src/crossChain/tokenCrossChainBasic.js","webpack://AElfCrossChain/./src/crossChain/crossChain.js","webpack://AElfCrossChain/./src/index.js"],"names":["decodeCrossChainTxFromBase64","AElfPbUtils","txBase64","tokenContract","decodeTx","Transaction","decode","Buffer","from","result","toObject","enums","String","longs","bytes","defaults","arrays","objects","oneofs","getRepForAddress","to","params","CrossChainTransfer","unpackPackedInput","toString","getChainIdsAndContractAddresses","options","contractAddresses","chainIds","sendInstance","receiveInstance","wallet","sha256","tokenContractName","crossChainContractName","tokenContractAddressSend","crossChainContractAddressSend","tokenContractAddressReceive","crossChainContractAddressReceive","chainIdSend","chainIdReceive","output","returnOutput","Object","keys","forEach","key","chain","getChainStatus","genesisContractAddressSend","GenesisContractAddress","ChainId","genesisContractAddressReceive","contractAt","genesisContractInstanceSend","genesisContractInstanceReceive","GetContractAddressByName","call","TokenCrossChainBasic","AElfUtils","mainChainId","issueChainId","reQueryInterval","queryLimit","aelfInstance","chainIdConvertor","base58ToChainId","getBoundParentChainHeightAndMerklePathByHeightLimit","getBoundParentChainHeightAndMerklePathByHeightCount","getBoundParentChainHeightAndMerklePathByHeightError","Promise","all","tokenContractSend","crossChainContractSend","tokenContractReceive","crossChainContractReceive","chainIdSendBase58","chainIdReceiveBase58","contractsAndChainIds","paramsSendInput","paramsSend","toChainId","memo","crossTransferTxId","transactionId","TransactionId","aelfInstanceTokenContract","getTxResult","crossTransferTxInfo","Status","toLowerCase","resolve","setTimeout","getCrossTransferRawTx","Error","JSON","stringify","error","message","canReceive","getBlockByHeight","RefBlockNumber","blockInfo","crossTransferRawTx","getSignedTx","parse","Params","height","Header","Height","hash","BlockHash","crossTransferTxBlockHeight","reject","GetBoundParentChainHeightAndMerklePathByHeight","value","merklePathFromParentChain","boundParentChainHeight","getBoundParentChainHeightAndMerklePathByHeight","then","catch","isFromMainChain","getMerklePathByTxId","merklePathByTxId","merklePath","merklePathNodes","MerklePathNodes","map","item","Hash","isLeftChildNode","IsLeftChildNode","boundParentChainHeightTemp","lastIrreversibleBlockHeight","LastIrreversibleBlockHeight","BlockNumber","isToMainChain","recevieInit","getMerklePath","crossTransferTxParentBlockHeight","GetParentChainHeight","parentChainHeight","parseInt","GetSideChainHeight","sideChainHeightInMainChain","receiveChainParentChainHeight","isReady","isChainReadyToReceive","CrossChainReceiveToken","fromChainId","transferTransactionBytes","crossReceiveTxId","CrossChain","initOptions","tokenCrossChainInstance","init","symbol","amount","send","sendInfo","receive","receiveInfo","e","utils"],"mappings":";;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,iBAAiB,mBAAO,CAAC,EAAqB;;;;;;;ACA9C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA,mC;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;AChBA,wBAAwB,mBAAO,CAAC,CAAqB;;AAErD,sBAAsB,mBAAO,CAAC,CAAmB;;AAEjD,wBAAwB,mBAAO,CAAC,CAAqB;;AAErD;AACA;AACA;;AAEA,oC;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACfA,qBAAqB,mBAAO,CAAC,EAAkB;;AAE/C,2BAA2B,mBAAO,CAAC,EAAwB;;AAE3D,sBAAsB,mBAAO,CAAC,EAAmB;;AAEjD;AACA;AACA;;AAEA,gC;;;;;;ACVA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;;AAEA;AACA;AACA;;AAEA,oC;;;;;;ACVA;AACA;AACA;;AAEA,kC;;;;;;ACJA;AACA;AACA;;AAEA,oC;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;A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","file":"aelf-cross-chain.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * @author huangzongzhe\n * @file utils.js\n * @description utils for crossChain\n */\n\n// module.exports = function decodeCrossChainTxFromBase64({\nexport function decodeCrossChainTxFromBase64({\n  AElfPbUtils,\n  txBase64,\n  tokenContract\n}) {\n  const decodeTx = AElfPbUtils.Transaction.decode(Buffer.from(txBase64, 'base64'));\n  const result = AElfPbUtils.Transaction.toObject(decodeTx, {\n    enums: String, // enums as string names\n    longs: String, // longs as strings (requires long.js)\n    bytes: String, // bytes as base64 encoded strings\n    defaults: true, // includes default values\n    arrays: true, // populates empty arrays (repeated fields) even if defaults=false\n    objects: true, // populates empty objects (map fields) even if defaults=false\n    oneofs: true // includes virtual oneof fields set to the present field's name\n  });\n\n  result.from = AElfPbUtils.getRepForAddress(result.from);\n  result.to = AElfPbUtils.getRepForAddress(result.to);\n  // The tokenContract of the chain which calls the crossTransfer is the best.\n  result.params = tokenContract.CrossChainTransfer.unpackPackedInput(\n    Buffer.from(result.params, 'base64').toString('hex')\n  );\n  return result;\n}\n\n// Demo\n// decodeCrossChainTxFromBase64({\n//   txBase64: `CiIKIOC0Ddw1INC1NjvZd1AU135Lj+gylG0OOCVzHYkSe4E6EiIKIHeO\n// MAahLMYJ14utgl9rwY/x41Tsf9qqAt5xwJg6u/cFGKOzfSIEL0SKSCoSQ3Jvc3NDaGFpblRyYW5zZmVyMlYKIgog\n// 4LQN3DUg0LU2O9l3UBTXfkuP6DKUbQ44JXMdiRJ7gToSA0VMRhgCIh9IZWxsb0tpdHR5IGNyb3NzIGNoYWluIHRy\n// YW5zZmVyKIL0pwEwm/ThBILxBEHcVPiIdDsRTrASLMNdS1VChGKVw1hVfchCpcynCNaA+U3nvo5AW84Lia+HQHUA\n// J2RtmaULu8ySzVkDMiIbv69UAA==`, tokenContract});\n\nexport async function getChainIdsAndContractAddresses(options) {\n  const {\n    contractAddresses,\n    chainIds,\n    sendInstance,\n    receiveInstance,\n    wallet,\n    sha256,\n    tokenContractName,\n    crossChainContractName\n  } = options;\n  if (contractAddresses && chainIds) {\n    const {\n      tokenContractAddressSend,\n      crossChainContractAddressSend,\n      tokenContractAddressReceive,\n      crossChainContractAddressReceive\n    } = contractAddresses;\n    const {\n      chainIdSend,\n      chainIdReceive\n    } = chainIds;\n    const output = {\n      tokenContractAddressSend,\n      crossChainContractAddressSend,\n      tokenContractAddressReceive,\n      crossChainContractAddressReceive,\n      chainIdSend,\n      chainIdReceive\n    };\n    let returnOutput = true;\n    Object.keys(output).forEach(key => {\n      if (!output[key]) {\n        returnOutput = false;\n      }\n    });\n    if (returnOutput) {\n      return output;\n    }\n  }\n\n  const {\n    GenesisContractAddress: genesisContractAddressSend,\n    ChainId: chainIdSend\n  } = await sendInstance.chain.getChainStatus();\n  const {\n    GenesisContractAddress: genesisContractAddressReceive,\n    ChainId: chainIdReceive\n  } = await receiveInstance.chain.getChainStatus();\n\n  // console.log('chainId raw: ', chainIdSend, chainIdReceive);\n  // console.log('----------------------------');\n\n  const genesisContractInstanceSend = await sendInstance.chain.contractAt(genesisContractAddressSend, wallet);\n  /* eslint-disable max-len */\n  const genesisContractInstanceReceive = await receiveInstance.chain.contractAt(genesisContractAddressReceive, wallet);\n  const tokenContractAddressSend = await genesisContractInstanceSend.GetContractAddressByName.call(sha256(tokenContractName));\n  const crossChainContractAddressSend = await genesisContractInstanceSend.GetContractAddressByName.call(sha256(crossChainContractName));\n  const tokenContractAddressReceive = await genesisContractInstanceReceive.GetContractAddressByName.call(sha256(tokenContractName));\n  const crossChainContractAddressReceive = await genesisContractInstanceReceive.GetContractAddressByName.call(sha256(crossChainContractName));\n  // }\n  return {\n    tokenContractAddressSend,\n    crossChainContractAddressSend,\n    tokenContractAddressReceive,\n    crossChainContractAddressReceive,\n    chainIdSend,\n    chainIdReceive\n  };\n}\n","/**\n * @author huangzongzhe\n * @file crossChain.js\n * @description\n */\n\n// module.exports = class TokenCrossChainBasic {\nimport {\n  getChainIdsAndContractAddresses\n} from './utils';\n\nexport default class TokenCrossChainBasic {\n  constructor({\n    AElfUtils,\n    sendInstance,\n    receiveInstance,\n    mainChainId = 9992731, // AELF: 9992731; TELF: 4200270\n    issueChainId = 9992731,\n    tokenContractName = 'AElf.ContractNames.Token',\n    crossChainContractName = 'AElf.ContractNames.CrossChain',\n    reQueryInterval = 5000,\n    queryLimit = 100\n  }) {\n    this.aelfInstance = {\n      sendInstance,\n      receiveInstance\n    };\n    const {\n      sha256,\n      chainIdConvertor\n    } = AElfUtils;\n\n    this.tokenContractName = tokenContractName;\n    this.crossChainContractName = crossChainContractName;\n\n    // this.crossQueen = {}; // TODO: 跨链发送等待队列\n    this.mainChainId = typeof mainChainId === 'string'\n      ? chainIdConvertor.base58ToChainId(mainChainId) : mainChainId; // ex: AELF -> 9992731\n    this.issueChainId = typeof issueChainId === 'string'\n      ? chainIdConvertor.base58ToChainId(issueChainId) : issueChainId;\n\n    this.reQueryInterval = reQueryInterval;\n\n    this.getBoundParentChainHeightAndMerklePathByHeightLimit = queryLimit;\n    this.getBoundParentChainHeightAndMerklePathByHeightCount = 0;\n    this.getBoundParentChainHeightAndMerklePathByHeightError = null;\n\n    this.sha256 = sha256;\n    this.chainIdConvertor = chainIdConvertor;\n  }\n\n  async init({\n    wallet,\n    contractAddresses = null,\n    chainIds = null\n  }) {\n    const {\n      sendInstance,\n      receiveInstance\n    } = this.aelfInstance;\n    const {\n      tokenContractName,\n      crossChainContractName,\n      sha256\n    } = this;\n\n    const {\n      tokenContractAddressSend,\n      crossChainContractAddressSend,\n      tokenContractAddressReceive,\n      crossChainContractAddressReceive,\n      chainIdSend,\n      chainIdReceive\n    } = await getChainIdsAndContractAddresses({\n      contractAddresses,\n      chainIds,\n      sendInstance,\n      receiveInstance,\n      wallet,\n      sha256,\n      tokenContractName,\n      crossChainContractName\n    });\n\n    // the user response to the try catch\n    const [\n      tokenContractSend,\n      crossChainContractSend,\n      tokenContractReceive,\n      crossChainContractReceive\n    ] = await Promise.all([\n      sendInstance.chain.contractAt(tokenContractAddressSend, wallet),\n      sendInstance.chain.contractAt(crossChainContractAddressSend, wallet),\n      receiveInstance.chain.contractAt(tokenContractAddressReceive, wallet),\n      receiveInstance.chain.contractAt(crossChainContractAddressReceive, wallet)\n    ]);\n\n    this.aelfInstance.tokenContractSend = tokenContractSend;\n    this.aelfInstance.tokenContractReceive = tokenContractReceive;\n    this.aelfInstance.crossChainContractSend = crossChainContractSend;\n    this.aelfInstance.crossChainContractReceive = crossChainContractReceive;\n    this.chainIdSendBase58 = chainIdSend;\n    this.chainIdReceiveBase58 = chainIdReceive;\n\n    return {\n      tokenContractSend,\n      tokenContractReceive,\n      crossChainContractSend,\n      crossChainContractReceive,\n      chainIdSend,\n      chainIdReceive\n    };\n  }\n\n  async send(contractsAndChainIds, paramsSendInput) {\n    const { chainIdConvertor } = this;\n    // {\n    //   to: receiveAddress,\n    //   symbol: tokenInfo.symbol,\n    //   amount: 1,\n    //   memo: 'HelloKitty cross chain transfer',\n    //   // toChainId: parseInt(ChainIdB, 10),\n    //   // toChainId: chainIdConvertor.base58ToChainId(ChainIdReceive),\n    //   // issueChainId: chainIdConvertor.base58ToChainId(tokenInfoA.issueChainId)\n    //   // issueChainId: chainIdConvertor.base58ToChainId(ChainIdSend)\n    // }\n    const {\n      tokenContractSend,\n      // chainIdSend,\n      chainIdReceive\n    } = contractsAndChainIds;\n\n    const paramsSend = {\n      ...paramsSendInput,\n      toChainId: chainIdConvertor.base58ToChainId(chainIdReceive),\n      issueChainId: this.issueChainId\n    };\n\n    console.log('chainId base58: ', paramsSend.issueChainId, paramsSend.toChainId, paramsSend);\n\n    // if memo === '', set memo = null\n    paramsSend.memo = paramsSend.memo || null;\n    const crossTransferTxId = await tokenContractSend.CrossChainTransfer(paramsSend);\n    console.log('crossTransferTxId: ', crossTransferTxId);\n    const {\n      TransactionId: transactionId\n    } = crossTransferTxId;\n\n    return {\n      toChainId: paramsSend.toChainId,\n      issueChainId: paramsSend.issueChainId,\n      crossTransferTxId: transactionId\n    };\n  }\n\n  async getCrossTransferRawTx({\n    aelfInstance,\n    aelfInstanceTokenContract,\n    transactionId\n  }) {\n    const crossTransferTxInfo = await aelfInstance.chain.getTxResult(transactionId);\n\n    const {\n      Status\n    } = crossTransferTxInfo;\n    if (Status && Status !== 'MINED') {\n      if (Status.toLowerCase() === 'pending') {\n        return new Promise(resolve => {\n          setTimeout(async () => {\n            resolve(await this.getCrossTransferRawTx({\n              aelfInstance,\n              aelfInstanceTokenContract,\n              transactionId\n            }));\n          }, this.reQueryInterval);\n        });\n      }\n      throw Error(JSON.stringify({\n        error: 1,\n        message: `${transactionId} is not MINED.[${Status}]`,\n        canReceive: false\n      }));\n    }\n\n    console.log('getCrossTransferRawTx crossTransferTxInfo: ', crossTransferTxInfo);\n    const blockInfo = await aelfInstance.chain.getBlockByHeight(crossTransferTxInfo.Transaction.RefBlockNumber, false);\n    // console.log('blockInfo: ', blockInfo);\n    // console.log('crossTransferTxInfo.Transaction.Params: ', crossTransferTxInfo.Transaction.Params);\n    const crossTransferRawTx = aelfInstanceTokenContract.CrossChainTransfer.getSignedTx(\n      JSON.parse(crossTransferTxInfo.Transaction.Params),\n      {\n        height: blockInfo.Header.Height,\n        hash: blockInfo.BlockHash\n      }\n    );\n\n    return {\n      crossTransferTxInfo,\n      crossTransferRawTx\n    };\n  }\n\n  // TODO: 可做可不做，调用GetBoundParentChainHeightAndMerklePathByHeight前\n  // 需要先判断当前侧链是否索引了 主链索引侧链跨链交易的区块\n  // 不然会403，报 'Invalid transaction information'\n  async getBoundParentChainHeightAndMerklePathByHeight({\n    crossChainContractSend,\n    crossTransferTxBlockHeight\n  }) {\n    if (this.getBoundParentChainHeightAndMerklePathByHeightCount\n      >= this.getBoundParentChainHeightAndMerklePathByHeightLimit) {\n      return Promise.reject(this.getBoundParentChainHeightAndMerklePathByHeightError);\n      // return Promise.reject(new Error('getBoundParentChainHeightAndMerklePathByHeight too many times!'));\n      // return Promise.reject({\n      //   message: 'getBoundParentChainHeightAndMerklePathByHeight too many times!',\n      //   detail: this.getBoundParentChainHeightAndMerklePathByHeightError\n      // });\n    }\n    try {\n      const {\n        merklePathFromParentChain,\n        // merklePathForParentChainRoot,\n        boundParentChainHeight\n      } = await crossChainContractSend.GetBoundParentChainHeightAndMerklePathByHeight.call({\n        value: crossTransferTxBlockHeight\n      });\n      this.getBoundParentChainHeightAndMerklePathByHeightCount = 0;\n      // console.log('merklePathFromParentChain 2333,', merklePathFromParentChain, testData, boundParentChainHeight);\n      return {\n        merklePathFromParentChain,\n        boundParentChainHeight\n      };\n    } catch (e) {\n      this.getBoundParentChainHeightAndMerklePathByHeightError = e;\n      this.getBoundParentChainHeightAndMerklePathByHeightCount++;\n      console.log('>>>>>>>>>>>>>>>> Re getBoundParentChainHeightAndMerklePathByHeight <<<<<');\n      console.log(crossTransferTxBlockHeight, e);\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          this.getBoundParentChainHeightAndMerklePathByHeight({\n            crossChainContractSend,\n            crossTransferTxBlockHeight\n          }).then(resolve).catch(reject);\n          // resolve(await this.getBoundParentChainHeightAndMerklePathByHeight({\n          //   crossChainContractSend,\n          //   crossTransferTxBlockHeight\n          // }));\n        }, this.reQueryInterval);\n      });\n    }\n  }\n\n  /* eslint-disable max-len */\n  // merklePath demo:\n  // {\n  //   merklePathNodes: [\n  //     {\n  //       hash: {\n  //         value: Buffer.from('93125e44277a02497e1a26bcda2bad188848c821ca8b12aa970a98bc00e9c3d6', 'hex').toString('base64')\n  //       }\n  //     },\n  //     {\n  //       hash: {\n  //         value: Buffer.from('b93d8d3f6e3f1fc90921a0008e572d348aed13613fd8ccfa775f0189d0a18ecb', 'hex').toString('base64')\n  //       },\n  //       isLeftChildNode: true\n  //     }\n  //   ]\n  // }\n  /* eslint-enable max-len */\n  async getMerklePath({\n    sendInstance,\n    crossChainContractSend,\n    crossTransferTxId,\n    crossTransferTxBlockHeight,\n    isFromMainChain = false\n  }) {\n    const merklePathByTxId = await sendInstance.chain.getMerklePathByTxId(crossTransferTxId);\n    const merklePath = {\n      merklePathNodes: [...merklePathByTxId.MerklePathNodes]\n    };\n\n    merklePath.merklePathNodes = merklePath.merklePathNodes.map(item => ({\n      hash: {\n        value: Buffer.from(item.Hash, 'hex').toString('base64')\n      },\n      isLeftChildNode: item.IsLeftChildNode\n    }));\n\n    let boundParentChainHeight = -1;\n    // [chain]side to side, side to main.\n    if (!isFromMainChain) {\n      // console.log('crossTransferTxBlockHeight 111: ', crossTransferTxBlockHeight);\n      // If we can not GetBoundParentChainHeightAndMerklePathByHeight from the chain\n      // It will throw a error.\n      const {\n        merklePathFromParentChain,\n        boundParentChainHeight: boundParentChainHeightTemp\n      } = await this.getBoundParentChainHeightAndMerklePathByHeight({\n        crossChainContractSend,\n        crossTransferTxBlockHeight\n      });\n\n      // console.log('merklePathFromParentChain: ', merklePath, merklePathFromParentChain);\n\n      boundParentChainHeight = boundParentChainHeightTemp;\n      merklePath.merklePathNodes = [...merklePath.merklePathNodes, ...merklePathFromParentChain.merklePathNodes];\n      // console.log('boundParentChainHeight: ', boundParentChainHeightTemp, crossTransferTxBlockHeight);\n    }\n\n    return {\n      boundParentChainHeight,\n      merklePath\n    };\n  }\n\n  async recevieInit({\n    crossTransferTxId\n  }) {\n    const {\n      chainIdConvertor\n    } = this;\n    const {\n      sendInstance,\n      tokenContractSend,\n      tokenContractReceive\n    } = this.aelfInstance;\n\n    if (!tokenContractReceive || !tokenContractSend) {\n      throw Error(JSON.stringify({\n        error: 1,\n        message: 'Please call tokenCrossChain.init to get tokenContractReceive & tokenContractSend at first.',\n        canReceive: false\n      }));\n    }\n\n    const {\n      LastIrreversibleBlockHeight: lastIrreversibleBlockHeight\n    } = await sendInstance.chain.getChainStatus();\n\n    const {\n      crossTransferTxInfo,\n      crossTransferRawTx\n    } = await this.getCrossTransferRawTx({\n      aelfInstance: sendInstance,\n      aelfInstanceTokenContract: tokenContractSend,\n      transactionId: crossTransferTxId\n    });\n\n    const {\n      BlockNumber: crossTransferTxBlockHeight\n    } = crossTransferTxInfo;\n\n    const chainIdSend = chainIdConvertor.base58ToChainId(this.chainIdSendBase58);\n    const chainIdReceive = chainIdConvertor.base58ToChainId(this.chainIdReceiveBase58);\n\n    const isFromMainChain = chainIdSend === this.mainChainId;\n    const isToMainChain = chainIdReceive === this.mainChainId;\n\n    return {\n      lastIrreversibleBlockHeight,\n      crossTransferTxInfo,\n      crossTransferRawTx,\n      crossTransferTxBlockHeight,\n      chainIdSend,\n      chainIdReceive,\n      isFromMainChain,\n      isToMainChain\n    };\n  }\n\n  async isChainReadyToReceive({\n    crossTransferTxId\n  }) {\n    const {\n      sendInstance,\n      // tokenContractReceive,\n      crossChainContractSend,\n      crossChainContractReceive\n    } = this.aelfInstance;\n\n    const {\n      lastIrreversibleBlockHeight,\n      crossTransferTxInfo,\n      crossTransferRawTx,\n      crossTransferTxBlockHeight,\n      chainIdSend,\n      isFromMainChain,\n      isToMainChain\n    } = await this.recevieInit({\n      crossTransferTxId\n    });\n\n    // console.log('isFromMainChain isToMainChain: ', isFromMainChain, isToMainChain);\n    // console.log('lastIrreversibleBlockHeight: ', lastIrreversibleBlockHeight, crossTransferTxRefBlockHeight);\n    if (lastIrreversibleBlockHeight >= crossTransferTxBlockHeight) {\n      if (crossTransferTxInfo.Status && crossTransferTxInfo.Status === 'MINED') {\n        const {\n          boundParentChainHeight,\n          merklePath\n        } = await this.getMerklePath({\n          sendInstance,\n          crossChainContractSend,\n          crossTransferTxId,\n          crossTransferTxBlockHeight,\n          isFromMainChain\n        });\n        console.log('boundParentChainHeight: ', boundParentChainHeight, isFromMainChain, isToMainChain);\n\n        let crossTransferTxParentBlockHeight = crossTransferTxBlockHeight;\n\n        if (isFromMainChain) {\n          // main chain to side chain\n          let {\n            value: parentChainHeight\n          } = await crossChainContractReceive.GetParentChainHeight.call();\n          parentChainHeight = parseInt(parentChainHeight, 10);\n\n          // console.log('parentChainHeight: ', parentChainHeight);\n          // If the crossChainContractReceive belongs to mainChain, we will get {value: '-1'};\n          // If the crossChainContractReceive belongs to sideChain.\n          if (parentChainHeight >= 0 && (parentChainHeight < crossTransferTxBlockHeight)) {\n            throw Error(JSON.stringify({\n              error: 1,\n              message: `the parent chain block at height of ${crossTransferTxBlockHeight}`\n                + 'is not recorded, please waiting.',\n              canReceive: true\n            }));\n          }\n        } else if (isToMainChain) {\n          // side chain to main chain\n          crossTransferTxParentBlockHeight = boundParentChainHeight;\n\n          const {\n            value: sideChainHeightInMainChain\n          } = await crossChainContractReceive.GetSideChainHeight.call({\n            value: chainIdSend\n          });\n\n          // await = receiveInstance.GetChainStatus.call();\n\n          // let {\n          //   value: sendChainParentChainHeight\n          // } = await crossChainContractSend.GetParentChainHeight.call();\n          // sendChainParentChainHeight = parseInt(sendChainParentChainHeight, 10);\n\n          // console.log('??????---------', crossTransferTxParentBlockHeight, sendChainParentChainHeight);\n\n          // if (sendChainParentChainHeight < crossTransferTxParentBlockHeight) {\n          //   console.log('??????---------', crossTransferTxParentBlockHeight, sendChainParentChainHeight);\n          //   // throw Error(JSON.stringify({\n          //   //   error: 1,\n          //   //   message: `The side chains are not ready to receive tx.\n          //   //     The crossTransferTxParentBlockHeight is ${crossTransferTxParentBlockHeight}.\n          //   //     The block height of parent in side chain is ${sendChainParentChainHeight}.`,\n          //   //   canReceive: true\n          //   // }));\n          // }\n\n          if (sideChainHeightInMainChain < crossTransferTxBlockHeight) {\n            throw Error(JSON.stringify({\n              error: 1,\n              message: `The side chains are not ready to receive tx.\n                The height of the side chain recorded in main chain is ${sideChainHeightInMainChain}.\n                sideChainHeightInMainChain need >= ${crossTransferTxBlockHeight}.`,\n              canReceive: true\n            }));\n          }\n        } else {\n          // side chain to side chain\n          let {\n            value: receiveChainParentChainHeight\n          } = await crossChainContractReceive.GetParentChainHeight.call();\n          receiveChainParentChainHeight = parseInt(receiveChainParentChainHeight, 10);\n\n          // When we call this.getMerklePath\n          if (boundParentChainHeight > receiveChainParentChainHeight) {\n            throw Error(JSON.stringify({\n              error: 1,\n              message: `The side chains are not ready to receive tx.\n                The boundParentChainHeight of crossChainTransfer is ${boundParentChainHeight}\n                The parentChainHeight of the chain which receives the tx is ${receiveChainParentChainHeight}.`,\n              canReceive: true\n            }));\n          }\n          crossTransferTxParentBlockHeight = boundParentChainHeight;\n        }\n\n        return {\n          isReady: true,\n          crossTransferRawTx,\n          chainIdSend,\n          merklePath,\n          crossTransferTxParentBlockHeight\n        };\n      }\n      throw Error(JSON.stringify({\n        error: 3,\n        message: `The transaction ${crossTransferTxId} of CrossChainTransfer\n          is ${crossTransferTxInfo.Status}.`,\n        canReceive: true\n      }));\n    } else {\n      throw Error(JSON.stringify({\n        error: 2,\n        message: `Please waiting until the lastIrreversibleBlockHeight[${lastIrreversibleBlockHeight}]\n          >= 'the height[${crossTransferTxBlockHeight}] of transaction of tokenCrossChainInstance.send()'\n          `,\n        canReceive: true\n      }));\n    }\n  }\n\n  async receive({\n    crossTransferTxId\n  }) {\n    const {\n      crossTransferRawTx,\n      chainIdSend,\n      merklePath,\n      crossTransferTxParentBlockHeight\n    } = await this.isChainReadyToReceive({\n      crossTransferTxId\n    });\n    const {\n      tokenContractReceive\n    } = this.aelfInstance;\n    // message CrossChainReceiveTokenInput {\n    //   int32 from_chain_id = 1;\n    //   int64 parent_chain_height = 2;\n    //   bytes transfer_transaction_bytes = 3;\n    //   aelf.MerklePath merkle_path = 4; // 发起交易的块的 merkle_path + 主链的merkle_path\n    // }\n    // 交易确认时\n    // parent_chain_height 永远是发起这笔转账交易时，主链的高度；\n    // 从侧链往主链，则是主链索引侧链包含这个交易的区块的区块高度。\n    // 侧链可以通过 crossChain 合约，获取发跨链交易时，主链索引的高度\n    // 这个合约是系统合约: 'AElf.ContractNames.CrossChain';\n    const crossReceiveTxId = await tokenContractReceive.CrossChainReceiveToken({\n      fromChainId: chainIdSend, // issueChainId,\n      // parentChainHeight: crossTransferTxBlockHeight, // main chain\n      parentChainHeight: crossTransferTxParentBlockHeight, // main chain\n      transferTransactionBytes: Buffer.from(crossTransferRawTx, 'hex'),\n      merklePath\n    });\n    return crossReceiveTxId;\n  }\n}\n","/**\n * @author hzz780\n * @file crossChain.js\n * @description\n */\n\n// const TokenCrossChainBasic = require('./tokenCrossChainBasic');\nimport TokenCrossChainBasic from './tokenCrossChainBasic';\n\n// module.exports = class CrossChain {\nexport default class CrossChain {\n  constructor({\n    AElfUtils,\n    sendInstance,\n    receiveInstance,\n    mainChainId = '',\n    issueChainId = '',\n    wallet,\n    reQueryInterval = 5000,\n    queryLimit\n  }) {\n    this.sendInstance = sendInstance;\n    this.receiveInstance = receiveInstance;\n    this.mainChainId = mainChainId;\n    this.issueChainId = issueChainId;\n    this.wallet = wallet;\n    this.reQueryInterval = reQueryInterval;\n    this.queryLimit = queryLimit;\n    this.AElfUtils = AElfUtils;\n  }\n\n  async init(initOptions) {\n    this.tokenCrossChainInstance = new TokenCrossChainBasic({\n      AElfUtils: this.AElfUtils,\n      sendInstance: this.sendInstance,\n      receiveInstance: this.receiveInstance,\n      mainChainId: this.mainChainId,\n      issueChainId: this.issueChainId,\n      queryLimit: this.queryLimit,\n    });\n\n    const {\n      contractAddresses,\n      chainIds\n    } = initOptions;\n\n    this.contractsAndChainIds = await this.tokenCrossChainInstance.init({\n      wallet: this.wallet,\n      contractAddresses,\n      chainIds\n    });\n  }\n\n  async send({\n    to,\n    symbol,\n    amount,\n    memo\n  }) {\n    const {\n      contractsAndChainIds,\n      tokenCrossChainInstance\n    } = this;\n    // console.log('contractsAndChainIds:', contractsAndChainIds.chainIdSend);\n\n    // const params = {\n    //   to: receiveAddress,\n    //   symbol: 'ELF',\n    //   amount: 1,\n    //   memo: 'HelloKitty cross chain transfer'\n    //   // toChainId: chainIdConvertor.base58ToChainId(ChainIdReceive),\n    //   // issueChainId: chainIdConvertor.base58ToChainId(ChainIdSend)\n    // };\n    const params = {\n      to,\n      symbol,\n      amount,\n      memo\n    };\n\n    const sendInfo = await tokenCrossChainInstance.send(contractsAndChainIds, params);\n    return sendInfo;\n  }\n\n  async isChainReadyToReceive({\n    crossTransferTxId\n  }) {\n    const {\n      tokenCrossChainInstance\n    } = this;\n\n    return tokenCrossChainInstance.isChainReadyToReceive({\n      crossTransferTxId\n    }).then(() => ({ error: 0 })).catch(error => {\n      if (error.error) {\n        return error;\n      }\n      return {\n        error: 1,\n        message: error\n      };\n    });\n  }\n\n  async receive({\n    crossTransferTxId,\n  }) {\n    const {\n      tokenCrossChainInstance\n    } = this;\n\n    try {\n      const receiveInfo = await tokenCrossChainInstance.receive({\n        crossTransferTxId\n      });\n      return receiveInfo;\n    } catch (error) {\n      if (error.message) {\n        let message = '';\n        try {\n          message = JSON.parse(error.message);\n        } catch (e) {\n          message = error.message;\n        }\n        // const message = JSON.parse(error.message);\n        if (message.canReceive) {\n          console.log('receiveInfo error canReceive: ', error);\n          return new Promise(resolve => {\n            console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>');\n            console.log('after 3s, receiving the token & info again');\n            setTimeout(async () => resolve(await this.receive({\n              crossTransferTxId\n            })), this.reQueryInterval);\n          });\n        }\n      }\n      console.log('receiveInfo error: ', error);\n      return {\n        error: 1,\n        message: error\n      };\n    }\n  }\n}\n","/**\n * @author hzz780\n * @file index.js\n * @description entry of crossChain\n */\n\n// const TokenCrossChainBasic = require('./crossChain/tokenCrossChainBasic');\n// const CrossChain = require('./crossChain/crossChain');\n// const utils = require('./crossChain/utils');\n\nimport TokenCrossChainBasic from './crossChain/tokenCrossChainBasic';\nimport CrossChain from './crossChain/crossChain';\nimport utils from './crossChain/utils';\n\n// module.exports = {\nexport default {\n  TokenCrossChainBasic,\n  CrossChain,\n  utils\n};\n"],"sourceRoot":""}